package ex1_File;

import java.io.File;

//Input Output

/*
 * 자바 입출력과 스트림
 * 
 * 프로그램은 데이터를 외부에서 입력받아 처리하고 출력하는 구조로 이루어져있다.
 * 프로그램으로 들어오는 값을 Input이라하고
 * 나가는 모든 값을 Output이라 한다.
 * 자바는 입출력을 처리하기 위해 I/O패키지를 제공한다.
 * 디스크 상에 존재하는 키보드/마우스와 같은 외부입력장치에서 입력되는 데이터,
 * 인터넷을 통해 전송되는 데이터 모두를 입출력할 수 있다.
 * 자바가 데이터를 주고받는 작업을 도와주는 통로를 '스트림'이라고 한다.
 * 
 * -입출력 스트림의 종류
 * 
 * 자바의 기본적인 데이터 입출력은 java.io패키지에서 제공
 * java.io패키지에서는 파일 시스템의 정보를 얻기 위한 File클래스와
 * 데이터 입출력을 위한 다양한 스트림 클래스를 제공한다.
 * 스트림의 종류를 크게 구분하면 전달 방식에 따라 byte 기반의 스트림과
 * 문자(char)기반의 스트림으로 구분한다.
 * 
 * -바이트 기반의 스트림
 * 컴퓨터의 모든 데이터는 바이트 단위로 이뤄져 있다.
 * 따라서 바이트 기반의 스트림의 경우 모든 타입의 데이터를 읽고 쓰는 것이 가능하다.
 * 바이트 기반 스트림은 입력 스트림과 출력 스트림이 있다.
 * 
 * -InputStream
 * 바이트 기반 입력 스트림은 최상위 클래스로 InputStream이 제공된다.
 * 해당 클래스를 통해 다양한 입력 스트림들이 존재한다.
 * 
 * -InputStream의 주요 메서드
 * int read() :  문자를 1 byte씩 읽고 반환, 더 이상 읽을 문자가 없으면 -1 반환
 * int read(byte[] b) : 매개변수로 주어진 배열에 읽은 문자를 저장하고 
 * 실제로 읽은 수만큼 반환, 더이상 읽을 문자가 없으면 -1 반환
 * int read(byte[]b, int offset, int len) 매개변수로 주어진 배열에 정해진 범위만큼
 * 읽어서 저장 offset(시작 위치), len(길이)
 * 
 * int availiable() : 스트림으로부터 읽어올 수 있는 데이터의 크기 반환
 * close() : 스트림 사용 종료하고 자원 반환
 * FileInputStream: 파일에서 바이트 단위로 자료를 읽어들일 때 사용하는 스트림
 * 이미지, 동영상, 텍스트 등 모든 타입의 파일을 읽어올 수 있다.
 * 
 * -OutputStream
 * 바이트 기반의 출력 스트림은 최상위 클래스로 OutputStream객체가 제공된다.
 * 해당 클래스를 상속해 다양한 출력 스트림들이 존재한다.
 * 
 * int write(int b)		1byte 출력
 * int write(byte[] b) 	매개변수로 주어진 배열의 모든 바이트를 출력
 * int wirte(byte[]b, int offset, int len) 매개변수로 주어진 배열의 정해진 범위만큼
 * 읽어서 출력 시작 위치(offset), 길이(len)
 * 
 * int flush()		출력 버퍼에 잔류하는 모든 내용 출력
 * close()			스트림의 사용을 종료하고 자원을 반환
 * 
 * FileOutputStream		
 * 
 * -문자기반스트림
 * 자바에서 기본 자료형은 char형을 통해 문자를 저장할 수 있다.
 * 1byte 단위로 처리하는 바이트 기반 스트림은 모든 파일을 다룰 수 있으나
 * 문자를 처리하는 char형의 크기는 2byte 로 별도의 처리를 하지 않으면 정상적으로 읽지 못하는 경우가 있다.
 * 이때 문자 기반의 스트림을 사용하면 간단하게 문자를 처리할 수 있다.
 * 
 * 문자 기반 입력 스트림은 Reader를 상속해 다양한 클래스를 제공한다.
 * 문자 기반 스트림에서 제공하는 메서드
 * int read() 1개의 문자를 읽고 반환 더이상 읽을 문자가 없으면 -1 반환
 * int read(char[] buf) 매개변수로 주어진 배열에 읽은 문자를 저장하고 읽은 수만큼 반환,
 * 더 이상 읽을 문자가 없으면 -1 반환
 * 
 * int read(char[] buf, int offset, int len): 매개변수로 주어진 배열의 정해진 범위만큼
 * 읽어서 저장
 * 
 * close() 스트림 사용 종료하고 자원 반환
 * 
 * FileReadr
 * 파일로부터 내용을 읽어오는 기능은 FileInputStream과 같다.
 * 
 */

/*
 * File 클래스
 * 파일 또는 폴더에 대한 정보를 제공하는 클래스
 * 경로명, 파일 크기, 타입, 날짜 등의 속성 정보를 제공한다.
 * 파일 생성, 삭제, 이름 변경 등 파일 관리 작업을 지원하기 위한 
 * 메서드로 구성되어 있다.
 */
public class Ex1_File {
	public static void main(String[] args) {
		String path="C:\\Users\\윤영진\\test.txt";
		
		File f = new File(path);
		//isFile(): 최종목적지가 파일형태면 true, 아니면 false
		if(f.isFile()) {
		System.out.println(f.length()+"byte");
		//length(): 파일의 크기
		
		}
	}
}
