package ex2_jFrame;

import javax.swing.JFrame;

//스윙

/*
 * 보다 세련된 형태의 gui를 제공하기 위해 만들어진 ui클래스의 모음
 * 
 * - 프레임
 * JFrame
 * 
 * -버튼
 * JButton
 * 
 * -이벤트와 이벤트 처리의 개념
 * 사용자의 입력, 키보드나 마우스 등의 장치나 소프트웨어적으로 발생하는 모든 사건을 의미
 * 이벤트가 발생하면 발생된 이벤트에 반응하여 필요한 것을 처리하는 행위를 이벤트핸들러가 한다.
 * 자바에서는 이벤트 핸들러는 메서드로 구현되며, 이벤트 동작에 응답하는 방식으로
 * 처리되는 프로그램을 이벤트 지향 프로그램이라고 한다.
 * 이벤트 지향 프로그램은 무한루프를 돌면서 사용자의 이벤트가 발생하기를 기다린다.
 * 사용자의 이벤트가 발생하면 이벤트를 처리하고 무한루프로 대기한다.
 * 
 * -리스너 인터페이스를 이용한 이벤트 처리
 * 리스너 인터페이스는 이벤트와 이벤트 핸들러 사이를 연결시켜주는 역할을 한다.
 * 이벤트가 발생한 해당 컴포넌트를 리스너에 등록시켜야 프로그램의 제어가 해당 이벤트가 제공하는 이벤트 핸들러로 옮겨진다.
 * 리스너 인터페이스를 이용하여 이벤트를 처리하기 위해서는 다음과 같은 순서로 프로그램을 작성해야 한다.
 * 
 * 1. 발생하는 이벤트를 처리할 이벤트 종류 결정
 * 2. 이벤트 처리에 적합한 리스너 인터페이스를 사용하여 클래스를 작성
 * 3. 이벤트를 받아들일 각 컴포넌트에 리스너 등록
 * 4. 리스너 인터페이스에 선언된 메서드를 오버라이딩하여 이벤트 처리 루틴 작성 
 */
public class JFrameTest extends JFrame{
	public JFrameTest() {
		setTitle("제목");
		setBounds(300,300,300,200);
		setVisible(true);
	}
	
	public static void main(String[] args) {
		JFrameTest f = new JFrameTest();
		
	}

	
}
